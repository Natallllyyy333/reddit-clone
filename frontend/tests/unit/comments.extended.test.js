describe('Comments Extended Tests', () => {
    beforeEach(() => {
        document.body.innerHTML = `
            <button class="comments-btn">
                <i>üí¨</i> <span class="comments-count">5</span> –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            </button>
            <div id="comments-section" class="hidden">
                <a href="#write_comment">Write comment</a>
                <div id="write_comment">
                    <textarea></textarea>
                </div>
                <div class="comment">Test comment</div>
            </div>
            <div id="deleteCommentModal">
                <form id="deleteCommentForm"></form>
            </div>
            <header style="height: 60px;"></header>
        `;
    });

    test('should handle all comment functionality', () => {
        require('../../static/js/comments.js');
        document.dispatchEvent(new Event('DOMContentLoaded'));

        // Test comment toggle
        const commentsBtn = document.querySelector('.comments-btn');
        const commentsSection = document.getElementById('comments-section');
        
        commentsBtn.click();
        expect(commentsSection.classList.contains('hidden')).toBe(false);
        
        commentsBtn.click();
        expect(commentsSection.classList.contains('hidden')).toBe(true);

        // Test smooth scroll - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ scrollTo
        window.location.hash = '#write_comment';
        window.dispatchEvent(new Event('hashchange'));
        
        // –í–º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ scrollTo, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª
        expect(window.location.hash).toBe('#write_comment');
    });

    test('should handle delete comment modal', () => {
        require('../../static/js/comments.js');
        document.dispatchEvent(new Event('DOMContentLoaded'));

        const modal = document.getElementById('deleteCommentModal');
        const mockButton = document.createElement('button');
        mockButton.setAttribute('data-comment-id', '123');
        mockButton.setAttribute('data-comment-url', '/comments/123/delete/');

        const event = new Event('show.bs.modal');
        event.relatedTarget = mockButton;

        modal.dispatchEvent(event);

        const form = document.getElementById('deleteCommentForm');
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º toContain –≤–º–µ—Å—Ç–æ toBe –¥–ª—è —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è URL
        expect(form.action).toContain('/comments/123/delete/');
    });
});