// video_handler.js - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ —Å –∑–∞–ø—É—Å–∫–æ–º/–æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–æ –∫–ª–∏–∫—É –Ω–∞ –ª—é–±—É—é –æ–±–ª–∞—Å—Ç—å

console.log('üé¨ Video handler loaded');

function handleVideoPlay(button) {
    console.log('üéØ Play button clicked');
    
    const container = button.closest('.video-container');
    const video = container.querySelector('video');
    const videoPreview = container.querySelector('.video-preview');
    
    if (!video) {
        console.error('‚ùå Video element not found');
        return;
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏ –ø—Ä–µ–≤—å—é
    button.style.display = 'none';
    if (videoPreview) videoPreview.style.display = 'none';
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –≤–∏–¥–µ–æ
    video.play().catch(error => {
        console.error('‚ùå Error playing video:', error);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        button.style.display = 'flex';
        if (videoPreview) videoPreview.style.display = 'block';
    });
}

function toggleVideoPlayback(container) {
    console.log('üé¨ Video area clicked');
    
    const video = container.querySelector('video');
    const videoPreview = container.querySelector('.video-preview');
    const playButton = container.querySelector('.video-play-button');
    
    if (!video) return;
    
    if (video.paused) {
        // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ
        if (playButton) playButton.style.display = 'none';
        if (videoPreview) videoPreview.style.display = 'none';
        
        video.play().then(() => {
            container.classList.add('playing');
        }).catch(error => {
            console.error('Error playing video on click:', error);
            if (playButton) playButton.style.display = 'flex';
            if (videoPreview) videoPreview.style.display = 'block';
        });
    } else {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
        video.pause();
        video.currentTime = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—á–∞–ª–æ
        container.classList.remove('playing');
        
        if (playButton) playButton.style.display = 'flex';
        if (videoPreview) videoPreview.style.display = 'block';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–µ—Ä–∞ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∫–∞–¥—Ä–∞ –≤–∏–¥–µ–æ
function createVideoPoster(video) {
    const container = video.closest('.video-container');
    
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ—Å—Ç–µ—Ä–∞
    let videoPreview = container.querySelector('.video-preview');
    if (!videoPreview) {
        videoPreview = document.createElement('img');
        videoPreview.className = 'video-preview img-fluid rounded';
        videoPreview.style.cssText = 'position:absolute; top:0; left:0; width:100%; height:100%; object-fit:cover; cursor:pointer; z-index:5; display:block;';
        container.appendChild(videoPreview);
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç–µ—Ä –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∫–∞–¥—Ä–∞
    video.addEventListener('loadeddata', function() {
        try {
            // –°–æ–∑–¥–∞–µ–º canvas –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–∞–¥—Ä–∞
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–≤—ã–π –∫–∞–¥—Ä
            video.currentTime = 0.1;
            
            const onSeeked = function() {
                try {
                    canvas.width = video.videoWidth || 400;
                    canvas.height = video.videoHeight || 300;
                    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
                    
                    const posterUrl = canvas.toDataURL();
                    videoPreview.src = posterUrl;
                    console.log('‚úÖ Video poster generated from first frame');
                    
                    // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    video.removeEventListener('seeked', onSeeked);
                } catch (error) {
                    console.error('‚ùå Error generating poster from frame:', error);
                    setFallbackPoster(videoPreview);
                }
            };
            
            video.addEventListener('seeked', onSeeked);
        } catch (error) {
            console.error('‚ùå Error in poster generation:', error);
            setFallbackPoster(videoPreview);
        }
    });
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
    setTimeout(() => {
        if (!videoPreview.src || videoPreview.src === '') {
            setFallbackPoster(videoPreview);
        }
    }, 3000);
}

// Fallback –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ—Å—Ç–µ—Ä–∞
function setFallbackPoster(videoPreview) {
    // –°–æ–∑–¥–∞–µ–º canvas —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º
    const canvas = document.createElement('canvas');
    canvas.width = 400;
    canvas.height = 300;
    const ctx = canvas.getContext('2d');
    
    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç
    const gradient = ctx.createLinearGradient(0, 0, 400, 300);
    gradient.addColorStop(0, '#2c3e50');
    gradient.addColorStop(1, '#3498db');
    
    ctx.fillStyle = gradient;
    ctx.fillRect(0, 0, 400, 300);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É play
    ctx.fillStyle = 'white';
    ctx.font = '48px Arial';
    ctx.textAlign = 'center';
    ctx.textBaseline = 'middle';
    ctx.fillText('‚ñ∂', 200, 150);
    
    videoPreview.src = canvas.toDataURL();
    console.log('üé® Using gradient fallback poster');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–∏–¥–µ–æ
function handleVideoEnd(video) {
    const container = video.closest('.video-container');
    const playButton = container.querySelector('.video-play-button');
    const videoPreview = container.querySelector('.video-preview');
    
    container.classList.remove('playing');
    if (playButton) playButton.style.display = 'flex';
    if (videoPreview) videoPreview.style.display = 'block';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
function initVideoHandlers() {
    console.log('üîÑ Initializing video handlers...');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    document.querySelectorAll('.video-play-button').forEach(button => {
        button.addEventListener('click', function(e) {
            e.stopPropagation();
            handleVideoPlay(this);
        });
        
        // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –≤–∏–¥–∏–º–∞
        button.style.display = 'flex';
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–∏–¥–µ–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    document.querySelectorAll('.video-container').forEach(container => {
        const video = container.querySelector('video');
        
        if (video) {
            // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤–∏–¥–µ–æ –≤–∏–¥–∏–º–æ
            video.style.display = 'block';
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å—Ç–µ—Ä
            createVideoPoster(video);
            
            // –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–õ–ò–ö–ê –ù–ê –ö–û–ù–¢–ï–ô–ù–ï–† - –≥–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            container.addEventListener('click', function(e) {
                // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                e.stopPropagation();
                e.preventDefault();
                
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ –∫–Ω–æ–ø–∫–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
                if (e.target.closest('.video-play-button')) {
                    return;
                }
                
                toggleVideoPlayback(container);
            });
            
            // –°–æ–±—ã—Ç–∏—è –≤–∏–¥–µ–æ
            video.addEventListener('play', function() {
                this.closest('.video-container').classList.add('playing');
                const playButton = this.closest('.video-container').querySelector('.video-play-button');
                const videoPreview = this.closest('.video-container').querySelector('.video-preview');
                if (playButton) playButton.style.display = 'none';
                if (videoPreview) videoPreview.style.display = 'none';
            });
            
            video.addEventListener('ended', function() {
                handleVideoEnd(this);
            });
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
            video.addEventListener('error', function() {
                console.error('‚ùå Video loading error:', this.error);
                const playButton = this.closest('.video-container').querySelector('.video-play-button');
                const videoPreview = this.closest('.video-container').querySelector('.video-preview');
                if (playButton) playButton.style.display = 'flex';
                if (videoPreview) videoPreview.style.display = 'block';
            });
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initVideoHandlers);
} else {
    initVideoHandlers();
}

// –î–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
if (typeof MutationObserver !== 'undefined') {
    const observer = new MutationObserver(function(mutations) {
        let shouldReinit = false;
        mutations.forEach(function(mutation) {
            if (mutation.type === 'childList') {
                mutation.addedNodes.forEach(function(node) {
                    if (node.nodeType === 1 && node.querySelector && node.querySelector('.video-container')) {
                        shouldReinit = true;
                    }
                });
            }
        });
        if (shouldReinit) {
            console.log('üîÑ New video content detected, reinitializing...');
            setTimeout(initVideoHandlers, 100);
        }
    });

    observer.observe(document.body, {
        childList: true,
        subtree: true
    });
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.handleVideoPlay = handleVideoPlay;
window.toggleVideoPlayback = toggleVideoPlayback;